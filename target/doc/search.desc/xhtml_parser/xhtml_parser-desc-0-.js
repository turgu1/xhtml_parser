searchState.loadedDescShard("xhtml_parser", 0, "This is the <code>xhtml-parser</code> crate, which provides an …\nAttribute handling for XML/XHTML parsing.\nxhtml_parser Definitions\nDocument module for the <code>xhtml-parser</code> crate.\nNode representation and manipulation in an XML document.\nParser for XML/XHTML documents.\nA reference to an XML attribute within a document.\nInformation about an XML attribute, storing name and value …\nAn iterator over the attributes of an XML node.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the attribute’s name matches the given …\nReturns the name of the attribute as a string slice.\nCreates a new AttributeInfo with the specified name and …\nCreates a new Attributes iterator for the given node.\nReturns the next attribute in the iteration.\nReturns the next attribute from the end of the iteration.\nReturns the nth attribute, skipping n-1 attributes.\nReturns bounds on the remaining length of the iterator.\nReturns the value of the attribute as a string slice.\nThe upper bound of the range (exclusive).\nThe upper bound of the range (exclusive).\nThe upper bound of the range (exclusive).\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe lower bound of the range (inclusive).\nThe lower bound of the range (inclusive).\nThe lower bound of the range (inclusive).\nRepresents a parsed XML document.\nAdds a new attribute to a node.\nAdds a new node to the document. This method allows adding …\nReturns the argument unchanged.\nRetrieves a node by its index.\nRetrieves the parent index of a given node.\nRetrieves a string slice from the XML content based on the …\nReturns the XML content of the document as a byte vector.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Document</code> from the provided XML content.\nReturns the root node of the document.\nRepresents a node in an XML document.\nIterator over node children.\nReturns a new <code>Attributes</code> iterator instance for this node.\nReturns an iterator over the children of the node. If the …\nReturns the first child of the node, if it exists, None …\nReturns the argument unchanged.\nReturns the argument unchanged.\nsearches for an attribute by name and returns its value if …\nFinds a child node with the specified tag name. If the …\nReturns the NodeType instance associated with this node.\nFinds a sibling node with the specified tag name. If the …\nReturns true if the node has children, false otherwise.\nReturns the index of the node in the document.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the node’s tag name matches the provided …\nReturns true if the node is a NodeType::Element, false …\nReturns true if the node is the root node, false otherwise.\nReturns true if the node is a NodeType::Text, false …\nReturns the last child of the node, if it exists, None …\nCreates a new <code>Node</code> instance.\nReturns the next sibling of the node, if it exists, None …\nReturns the parent node of this node, if it exists. If …\nReturns the position of this node in the XML source.\nReturns the previous sibling of the node, if it exists, …\nReturns the tag name of the node. If the node is not an …\nReturns the text content of the node. If the node is not a …\nReturns the index of the first child of this node.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this node is an element node.\nCreates a new <code>NodeInfo</code> instance.\nReturns the index of the next sibling of this node.\nReturns the type of this node.\nReturns the index of the parent node, or <code>None</code> if this is …\nReturns the position of this node in the XML source.\nReturns the index of the previous sibling of this node.\nSets the first child index for this node.\nSets the next sibling index for this node.\nSets the parent index for this node.\nSets the previous sibling index for this node.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")